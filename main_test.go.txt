package main

import (
	"context"
	"os"
	"testing"

	"github.com/aws/aws-lambda-go/events"
)

func TestLambdaHandler(t *testing.T) {
	err := os.Setenv("AWS_REGION", "eu-west-1")
	if err != nil {
		return
	}
	err = os.Setenv("SECRET_NAME", "configuration/dpo/callback/config")
	if err != nil {
		return
	}
	type args struct {
		ctx      context.Context
		sqsEvent events.SQSEvent
	}
	var tests = []struct {
		name    string
		args    args
		want    bool
		wantErr bool
	}{
		{
			name: "Integration Test",
			args: args{
				ctx: context.TODO(),
				sqsEvent: events.SQSEvent{Records: []events.SQSMessage{
					{
						MessageId: "24234",
						Body: `{
						"CallbackUrl": "https://cb.pgcoza.biz/tnm/mw/callback/request",
                        "Action": "Invoice",
						"UrlToken":"https://dev.payouts.tnmmpamba.co.mw/api/authenticate",
						"UrlQuery":"https://dev.payouts.tnmmpamba.co.mw/api/invoices/",
						"Wallet": "500957",
						"Password": "Test_Test_42",
						"TransId": "4979440",
                         "MbtId": "1350874",
						"Amount": 300,
                         "CellphoneNumber": "265882009852",
						"Description": "football ticket payment - VIP",
                        "IsInvoice" : true
					}`,
						ReceiptHandle: "Handle",
					},
				}},
			},
			want:    true,
			wantErr: false,
		},
	}
	for _, tt := range tests {
		if os.Getenv("SKIP_MAIN") == "" {
			t.Run(tt.name, func(t *testing.T) {
				err := LambdaHandler(tt.args.ctx, tt.args.sqsEvent)
				if (err != nil) != tt.wantErr {
					t.Errorf("LambdaHandler() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
			})
		}
	}
}
